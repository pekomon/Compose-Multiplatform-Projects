name: Minesweeper CI

on:
  push:
    branches: [ main ]
    paths:
      - 'Minesweeper/**'
      - '.github/workflows/minesweeper-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Minesweeper/**'
      - '.github/workflows/minesweeper-ci.yml'

concurrency:
  group: minesweeper-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # 1) Quality-gate (Spotless + Detekt)
  quality:
    name: Quality (Spotless + Detekt)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Spotless + Detekt
        run: ./gradlew qualityCheck

      - name: Upload Detekt reports
        uses: actions/upload-artifact@v4
        with:
          name: detekt-reports
          path: |
            **/build/reports/detekt/*.html
            **/build/reports/detekt/*.xml
          if-no-files-found: warn

  # 2) Tests + Coverage (Kover)
  coverage:
    name: Tests + Coverage (Kover)
    needs: [quality]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run tests + coverage
        run: ./gradlew test koverXmlReport koverHtmlReport

      - name: Upload coverage reports (HTML+XML)
        uses: actions/upload-artifact@v4
        with:
          name: kover-reports
          path: |
            build/reports/kover/html/**
            build/reports/kover/xml/**
          if-no-files-found: warn

  # 3) Android build
  android:
    name: Android (assembleDebug)
    needs: [quality]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Install Android SDK (accept licenses)
        uses: android-actions/setup-android@v3

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew :composeApp:assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-debug
          path: composeApp/build/outputs/apk/debug/*.apk
          if-no-files-found: warn

  # 4) Desktop build
  desktop:
    name: Desktop (uber-jar)
    needs: [quality]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build uber-jar
        run: ./gradlew :composeApp:packageReleaseUberJarForCurrentOS

      - name: Upload Desktop JAR
        uses: actions/upload-artifact@v4
        with:
          name: desktop-uber-jar
          path: composeApp/build/compose/jars/*.jar
          if-no-files-found: warn

  # 5) Wasm build (production dist)
  wasm:
    name: Wasm (production distribution)
    needs: [quality]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build wasm distribution
        run: ./gradlew :composeApp:wasmJsBrowserDistribution

      - name: Upload Wasm dist
        uses: actions/upload-artifact@v4
        with:
          name: wasm-dist
          path: composeApp/build/dist/wasmJs/productionExecutable/**
          if-no-files-found: warn

  # 6) iOS compile (simulator ARM64) â€“ compile-only smoke
  ios:
    name: iOS (compile Kotlin/Native for simulator)
    needs: [quality]
    runs-on: macos-15
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Compile for iOS simulator (Kotlin/Native)
        run: ./gradlew :composeApp:compileKotlinIosSimulatorArm64

      # Jos haluat tallettaa frameworkin, vaihda link-taskiin ja kopioi:
      # - name: Build iOS framework (optional)
      #   run: ./gradlew :composeApp:linkDebugFrameworkIosSimulatorArm64
      # - name: Upload iOS framework
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ios-sim-debug-framework
      #     path: composeApp/build/bin/iosSimulatorArm64/debugFramework/ComposeApp.framework/**
      #     if-no-files-found: warn
