name: Build & Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

concurrency:
  group: minesweeper-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write           # tarvitaan format-jobin auto-commit/push
  pull-requests: write

jobs:
  changes:
    name: Detect Minesweeper changes
    runs-on: ubuntu-latest
    outputs:
      minesweeper: ${{ steps.filter.outputs.minesweeper }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            minesweeper:
              - 'Minesweeper/**'
              - 'gradle/**'
              - 'gradlew'
              - 'gradlew.bat'
              - 'gradle.properties'
              - 'settings.gradle*'
              - 'build.gradle*'
              - 'gradle/libs.versions.toml'
              - '.github/workflows/**'

  format:
    name: Spotless Apply & Push
    needs: [changes]
    # PR: aina; push: vain jos Minesweeper-osui
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Spotless Apply
        run: ./gradlew :composeApp:spotlessApply

      - name: Commit and push formatting changes (PR only)
        if: github.event_name == 'pull_request'
        run: |
          cd ..
          if [[ -n "$(git status --porcelain)" ]]; then
            if [[ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]]; then
              echo 'Skipping auto-commit for forked PR.'
            else
              git config user.name "github-actions[bot]"
              git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
              git add -A
              git commit -m "chore: apply spotless formatting"
              git push origin HEAD:${{ github.head_ref }}
            fi
          else
            echo "No formatting changes."
          fi

  quality:
    name: Quality (Spotless Check & Detekt)
    needs: [changes, format]
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Spotless Check & Detekt
        run: ./gradlew :composeApp:spotlessCheck :composeApp:detekt

      - name: Upload Detekt reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detekt-reports
          path: |
            Minesweeper/composeApp/build/reports/detekt/*.html
            Minesweeper/composeApp/build/reports/detekt/*.xml
          if-no-files-found: warn

  tests:
    name: JVM Tests & Coverage
    needs: [changes, format, quality]
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: JVM tests & Kover reports
        run: ./gradlew :composeApp:test :composeApp:koverXmlReport :composeApp:koverHtmlReport

      - name: Upload Kover coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kover-reports
          path: |
            Minesweeper/composeApp/build/reports/kover/html
            Minesweeper/composeApp/build/reports/kover/xml
          if-no-files-found: warn

  android:
    name: Android (assembleDebug)
    needs: [changes, format, quality, tests]
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android SDK (accept licenses)
        uses: android-actions/setup-android@v3

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew :composeApp:assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: composeApp-debug-apk
          path: Minesweeper/composeApp/build/outputs/apk/debug/*.apk
          if-no-files-found: warn

  desktop:
    name: Desktop (uber-jar)
    needs: [changes, format, quality, tests]
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build uber-jar
        run: ./gradlew :composeApp:packageDistributionForCurrentOS

      - name: Upload desktop jar
        uses: actions/upload-artifact@v4
        with:
          name: desktop-uber-jar
          path: Minesweeper/composeApp/build/compose/jars/*.jar
          if-no-files-found: warn

  wasm:
    name: Wasm (production distribution)
    needs: [changes, format, quality, tests]
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build production distribution
        run: ./gradlew :composeApp:wasmJsBrowserDistribution

      - name: Upload wasm dist
        uses: actions/upload-artifact@v4
        with:
          name: wasm-dist
          path: Minesweeper/composeApp/build/dist/wasmJs/productionExecutable/**
          if-no-files-found: warn
