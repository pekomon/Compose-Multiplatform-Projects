name: Build & Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

concurrency:
  group: minesweeper-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  changes:
    name: Detect Minesweeper changes
    runs-on: ubuntu-latest
    outputs:
      minesweeper: ${{ steps.filter.outputs.minesweeper }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            minesweeper:
              - 'Minesweeper/**'
              - 'gradle/**'
              - 'gradlew'
              - 'gradlew.bat'
              - 'gradle.properties'
              - 'settings.gradle*'
              - 'build.gradle*'
              - 'gradle/libs.versions.toml'
              - '.github/workflows/**'

  quality:
    name: Quality (Spotless Check & Detekt)
    needs: [changes]
    if: github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Spotless Check
        id: spotless_check
        continue-on-error: true
        run: ./gradlew :composeApp:spotlessCheck

      - name: Detekt
        id: detekt
        continue-on-error: true
        run: ./gradlew :composeApp:detekt

      - name: Spotless Apply for patch
        if: always() && steps.spotless_check.outcome == 'failure'
        run: ./gradlew :composeApp:spotlessApply

      - name: Generate Spotless patch
        if: always() && steps.spotless_check.outcome == 'failure'
        run: |
          if git diff --quiet; then
            echo "No changes from spotlessApply."
          else
            git diff --binary > spotless.patch
          fi

      - name: Upload Detekt reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detekt-reports
          path: |
            Minesweeper/composeApp/build/reports/detekt/*.html
            Minesweeper/composeApp/build/reports/detekt/*.xml
          if-no-files-found: warn

      - name: Upload Spotless patch
        if: always() && steps.spotless_check.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: spotless-patch
          path: spotless.patch
          if-no-files-found: ignore

  tests:
    name: JVM Tests & Coverage
    needs: [changes]
    if: github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: JVM tests & Kover reports
        run: ./gradlew :composeApp:test :composeApp:koverXmlReport :composeApp:koverHtmlReport

      - name: Upload Kover coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kover-reports
          path: |
            Minesweeper/composeApp/build/reports/kover/html
            Minesweeper/composeApp/build/reports/kover/xml
          if-no-files-found: warn

  android-ui-tests:
    name: Android (instrumented UI tests)
    needs: [tests]
    if: github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android SDK (accept licenses)
        uses: android-actions/setup-android@v3

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run UI tests on emulator (API 34)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          arch: x86_64
          target: default
          disable-animations: true
          script: |
            cd Minesweeper
            ./gradlew :composeApp:connectedDebugAndroidTest
            mkdir -p composeApp/build/outputs/androidTest-screenshots
            adb pull /sdcard/Android/data/com.example.pekomon.minesweeper/files/androidTest-screenshots composeApp/build/outputs/androidTest-screenshots || true

      - name: Upload UI test screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-screenshots
          path: Minesweeper/composeApp/build/outputs/androidTest-screenshots/**
          if-no-files-found: warn

  android:
    name: Android (assembleDebug)
    needs: [tests]
    if: github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android SDK (accept licenses)
        uses: android-actions/setup-android@v3

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew :composeApp:assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: composeApp-debug-apk
          path: Minesweeper/composeApp/build/outputs/apk/debug/*.apk
          if-no-files-found: warn

  desktop:
    name: Desktop (uber-jar)
    needs: [tests]
    if: github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build uber-jar
        run: ./gradlew :composeApp:packageDistributionForCurrentOS

      - name: Upload desktop jar
        uses: actions/upload-artifact@v4
        with:
          name: desktop-uber-jar
          path: Minesweeper/composeApp/build/compose/jars/*.jar
          if-no-files-found: warn

  wasm:
    name: Wasm (production distribution)
    needs: [tests]
    if: github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build production distribution
        run: ./gradlew :composeApp:wasmJsBrowserDistribution

      - name: Upload wasm dist
        uses: actions/upload-artifact@v4
        with:
          name: wasm-dist
          path: Minesweeper/composeApp/build/dist/wasmJs/productionExecutable/**
          if-no-files-found: warn
