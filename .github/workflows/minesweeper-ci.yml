name: Minesweeper CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  changes:
    name: Detect Minesweeper changes
    runs-on: ubuntu-latest
    outputs:
      minesweeper: ${{ steps.filter.outputs.minesweeper }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # tärkeää, paths-filter tarvitsee historian

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            minesweeper:
              - 'Minesweeper/**'
              - 'gradle/**'
              - 'gradlew'
              - 'gradlew.bat'
              - 'gradle.properties'
              - 'settings.gradle*'
              - 'build.gradle*'
              - 'gradle/libs.versions.toml'
              - '.github/workflows/**'

  # 1) Quality-gate (Spotless + Detekt)
  quality:
    name: Quality (Spotless + Detekt + Tests)
    needs: [changes]
    if: github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Spotless + Detekt + Tests + Kover
        run: ./gradlew :composeApp:spotlessCheck :composeApp:detekt :composeApp:test :composeApp:koverXmlReport :composeApp:koverHtmlReport

      - name: Upload Detekt reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: detekt-reports
          path: |
            Minesweeper/composeApp/build/reports/detekt/*.html
            Minesweeper/composeApp/build/reports/detekt/*.xml
          if-no-files-found: warn

      - name: Upload Kover coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: kover-html
          path: Minesweeper/composeApp/build/reports/kover/html
          if-no-files-found: warn

  # 3) Android build
  android:
    name: Android (assembleDebug)
    needs: [changes, quality]
    if: github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Install Android SDK (accept licenses)
        uses: android-actions/setup-android@v3

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew :composeApp:assembleDebug

      - name: Debug list outputs
        run: |
          ls -la Minesweeper/composeApp/build/outputs/apk/debug || true
          find Minesweeper/composeApp/build -name "*.apk" -maxdepth 5 -print || true

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-debug
          path: Minesweeper/composeApp/build/outputs/apk/debug/*.apk
          if-no-files-found: warn

  # 4) Desktop build
  desktop:
    name: Desktop (uber-jar)
    needs: [changes, quality]
    if: github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build uber-jar
        run: ./gradlew :composeApp:packageReleaseUberJarForCurrentOS

      - name: Upload Desktop JAR
        uses: actions/upload-artifact@v4
        with:
          name: desktop-uber-jar
          path: Minesweeper/composeApp/build/compose/jars/*.jar
          if-no-files-found: warn

  # 5) Wasm build (production dist)
  wasm:
    name: Wasm (production distribution)
    needs: [changes, quality]
    if: github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build wasm distribution
        run: ./gradlew :composeApp:wasmJsBrowserDistribution

      - name: Upload Wasm dist
        uses: actions/upload-artifact@v4
        with:
          name: wasm-dist
          path: Minesweeper/composeApp/build/dist/wasmJs/productionExecutable/**
          if-no-files-found: warn

  # 6) iOS compile (simulator ARM64) – compile-only smoke
  ios:
    name: iOS (compile Kotlin/Native for simulator)
    needs: [changes, quality]
    if: github.event_name == 'workflow_dispatch' || needs.changes.outputs.minesweeper == 'true'
    runs-on: macos-15
    defaults:
      run:
        working-directory: Minesweeper
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Gradle build cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Compile for iOS simulator (Kotlin/Native)
        run: ./gradlew :composeApp:compileKotlinIosSimulatorArm64

      # If you wanna store framework, change to link-task and copy:
      # - name: Build iOS framework (optional)
      #   run: ./gradlew :composeApp:linkDebugFrameworkIosSimulatorArm64
      # - name: Upload iOS framework
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ios-sim-debug-framework
      #     path: composeApp/build/bin/iosSimulatorArm64/debugFramework/ComposeApp.framework/**
      #     if-no-files-found: warn
